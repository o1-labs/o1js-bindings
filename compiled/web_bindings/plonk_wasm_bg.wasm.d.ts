/* tslint:disable */
/* eslint-disable */
export const __wbg_wasmvecvecfp_free: (a: number, b: number) => void;
export const wasmvecvecfp_create: (a: number) => number;
export const wasmvecvecfp_push: (a: number, b: number, c: number) => void;
export const wasmvecvecfp_get: (a: number, b: number, c: number) => void;
export const wasmvecvecfp_set: (a: number, b: number, c: number, d: number) => void;
export const wasmvecvecfq_push: (a: number, b: number, c: number) => void;
export const wasmvecvecfq_get: (a: number, b: number, c: number) => void;
export const wasmvecvecfq_set: (a: number, b: number, c: number, d: number) => void;
export const greet: (a: number, b: number) => void;
export const console_log: (a: number, b: number) => void;
export const create_zero_u32_ptr: () => number;
export const free_u32_ptr: (a: number) => void;
export const set_u32_ptr: (a: number, b: number) => void;
export const wait_until_non_zero: (a: number) => number;
export const __wbg_wasmfpgatevector_free: (a: number, b: number) => void;
export const __wbg_wasmfpgate_free: (a: number, b: number) => void;
export const __wbg_get_wasmfpgate_typ: (a: number) => number;
export const __wbg_set_wasmfpgate_typ: (a: number, b: number) => void;
export const __wbg_get_wasmfpgate_wires: (a: number) => number;
export const __wbg_set_wasmfpgate_wires: (a: number, b: number) => void;
export const wasmfpgate_new: (a: number, b: number, c: number, d: number) => number;
export const caml_pasta_fp_plonk_gate_vector_create: () => number;
export const caml_pasta_fp_plonk_gate_vector_add: (a: number, b: number) => void;
export const caml_pasta_fp_plonk_gate_vector_get: (a: number, b: number) => number;
export const caml_pasta_fp_plonk_gate_vector_len: (a: number) => number;
export const caml_pasta_fp_plonk_gate_vector_wrap: (a: number, b: number, c: number) => void;
export const caml_pasta_fp_plonk_gate_vector_digest: (a: number, b: number, c: number) => void;
export const caml_pasta_fp_plonk_circuit_serialize: (a: number, b: number, c: number) => void;
export const wasmfqgate_new: (a: number, b: number, c: number, d: number) => number;
export const caml_pasta_fq_plonk_gate_vector_get: (a: number, b: number) => number;
export const caml_pasta_fq_plonk_gate_vector_wrap: (a: number, b: number, c: number) => void;
export const caml_pasta_fq_plonk_gate_vector_digest: (a: number, b: number, c: number) => void;
export const caml_pasta_fq_plonk_circuit_serialize: (a: number, b: number, c: number) => void;
export const caml_fq_srs_create: (a: number) => number;
export const caml_fq_srs_add_lagrange_basis: (a: number, b: number) => void;
export const caml_fq_srs_lagrange_commitments_whole_domain_ptr: (a: number, b: number) => number;
export const caml_fq_srs_lagrange_commitment: (a: number, b: number, c: number, d: number) => void;
export const caml_fq_srs_commit_evaluations: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_fq_srs_b_poly_commitment: (a: number, b: number, c: number, d: number) => void;
export const caml_fq_srs_batch_accumulator_check: (a: number, b: number, c: number, d: number, e: number) => number;
export const caml_fq_srs_batch_accumulator_generate: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_fq_srs_create_parallel: (a: number) => number;
export const caml_fq_srs_set: (a: number, b: number) => number;
export const caml_fq_srs_maybe_lagrange_commitment: (a: number, b: number, c: number) => number;
export const caml_fq_srs_set_lagrange_basis: (a: number, b: number, c: number, d: number) => void;
export const caml_fq_srs_get_lagrange_basis: (a: number, b: number, c: number) => void;
export const __wbg_wasmfplookupcommitments_free: (a: number, b: number) => void;
export const wasmfplookupcommitments_new: (a: number, b: number, c: number, d: number) => number;
export const wasmfplookupcommitments_sorted: (a: number, b: number) => void;
export const wasmfplookupcommitments_aggreg: (a: number) => number;
export const wasmfplookupcommitments_runtime: (a: number) => number;
export const wasmfplookupcommitments_set_sorted: (a: number, b: number, c: number) => void;
export const wasmfplookupcommitments_set_aggreg: (a: number, b: number) => void;
export const wasmfplookupcommitments_set_runtime: (a: number, b: number) => void;
export const __wbg_wasmfpprovercommitments_free: (a: number, b: number) => void;
export const wasmfpprovercommitments_new: (a: number, b: number, c: number, d: number, e: number) => number;
export const wasmfpprovercommitments_w_comm: (a: number, b: number) => void;
export const wasmfpprovercommitments_z_comm: (a: number) => number;
export const wasmfpprovercommitments_t_comm: (a: number) => number;
export const wasmfpprovercommitments_lookup: (a: number) => number;
export const wasmfpprovercommitments_set_w_comm: (a: number, b: number, c: number) => void;
export const wasmfpprovercommitments_set_z_comm: (a: number, b: number) => void;
export const wasmfpprovercommitments_set_t_comm: (a: number, b: number) => void;
export const wasmfpprovercommitments_set_lookup: (a: number, b: number) => void;
export const __wbg_wasmfpopeningproof_free: (a: number, b: number) => void;
export const __wbg_get_wasmfpopeningproof_z2: (a: number, b: number) => void;
export const __wbg_set_wasmfpopeningproof_z2: (a: number, b: number, c: number) => void;
export const wasmfpopeningproof_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => number;
export const wasmfpopeningproof_lr_0: (a: number, b: number) => void;
export const wasmfpopeningproof_lr_1: (a: number, b: number) => void;
export const wasmfpopeningproof_delta: (a: number) => number;
export const wasmfpopeningproof_sg: (a: number) => number;
export const wasmfpopeningproof_set_lr_0: (a: number, b: number, c: number) => void;
export const wasmfpopeningproof_set_lr_1: (a: number, b: number, c: number) => void;
export const wasmfpopeningproof_set_delta: (a: number, b: number) => void;
export const wasmfpopeningproof_set_sg: (a: number, b: number) => void;
export const __wbg_wasmfpproverproof_free: (a: number, b: number) => void;
export const __wbg_get_wasmfpproverproof_ft_eval1: (a: number, b: number) => void;
export const __wbg_set_wasmfpproverproof_ft_eval1: (a: number, b: number, c: number) => void;
export const wasmfpproverproof_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => number;
export const wasmfpproverproof_commitments: (a: number) => number;
export const wasmfpproverproof_proof: (a: number) => number;
export const wasmfpproverproof_evals: (a: number) => number;
export const wasmfpproverproof_public_: (a: number, b: number) => void;
export const wasmfpproverproof_prev_challenges_scalars: (a: number) => number;
export const wasmfpproverproof_prev_challenges_comms: (a: number, b: number) => void;
export const wasmfpproverproof_set_commitments: (a: number, b: number) => void;
export const wasmfpproverproof_set_proof: (a: number, b: number) => void;
export const wasmfpproverproof_set_evals: (a: number, b: number) => void;
export const wasmfpproverproof_set_public_: (a: number, b: number, c: number) => void;
export const wasmfpproverproof_set_prev_challenges_scalars: (a: number, b: number) => void;
export const wasmfpproverproof_set_prev_challenges_comms: (a: number, b: number, c: number) => void;
export const wasmfpproverproof_serialize: (a: number, b: number) => void;
export const __wbg_wasmfpruntimetable_free: (a: number, b: number) => void;
export const wasmfpruntimetable_new: (a: number, b: number, c: number) => number;
export const caml_pasta_fp_plonk_proof_create: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const caml_pasta_fp_plonk_proof_verify: (a: number, b: number) => number;
export const __wbg_wasmvecvecfppolycomm_free: (a: number, b: number) => void;
export const wasmvecvecfppolycomm_push: (a: number, b: number, c: number) => void;
export const caml_pasta_fp_plonk_proof_batch_verify: (a: number, b: number, c: number, d: number) => number;
export const caml_pasta_fp_plonk_proof_dummy: () => number;
export const caml_pasta_fp_plonk_proof_deep_copy: (a: number) => number;
export const __wbg_get_wasmfqopeningproof_z2: (a: number, b: number) => void;
export const __wbg_set_wasmfqopeningproof_z2: (a: number, b: number, c: number) => void;
export const wasmfqopeningproof_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => number;
export const __wbg_get_wasmfqproverproof_ft_eval1: (a: number, b: number) => void;
export const __wbg_set_wasmfqproverproof_ft_eval1: (a: number, b: number, c: number) => void;
export const wasmfqproverproof_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => number;
export const wasmfqproverproof_evals: (a: number) => number;
export const wasmfqproverproof_public_: (a: number, b: number) => void;
export const wasmfqproverproof_set_evals: (a: number, b: number) => void;
export const wasmfqproverproof_set_public_: (a: number, b: number, c: number) => void;
export const wasmfqproverproof_serialize: (a: number, b: number) => void;
export const wasmfqruntimetable_new: (a: number, b: number, c: number) => number;
export const caml_pasta_fq_plonk_proof_create: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const caml_pasta_fq_plonk_proof_verify: (a: number, b: number) => number;
export const wasmvecvecfqpolycomm_push: (a: number, b: number, c: number) => void;
export const caml_pasta_fq_plonk_proof_batch_verify: (a: number, b: number, c: number, d: number) => number;
export const caml_pasta_fq_plonk_proof_dummy: () => number;
export const caml_pasta_fp_poseidon_block_cipher: (a: number, b: number, c: number) => void;
export const caml_pasta_fq_poseidon_block_cipher: (a: number, b: number, c: number) => void;
export const __wbg_featureflags_free: (a: number, b: number) => void;
export const __wbg_get_featureflags_range_check0: (a: number) => number;
export const __wbg_set_featureflags_range_check0: (a: number, b: number) => void;
export const __wbg_get_featureflags_range_check1: (a: number) => number;
export const __wbg_set_featureflags_range_check1: (a: number, b: number) => void;
export const __wbg_get_featureflags_foreign_field_add: (a: number) => number;
export const __wbg_set_featureflags_foreign_field_add: (a: number, b: number) => void;
export const __wbg_get_featureflags_foreign_field_mul: (a: number) => number;
export const __wbg_set_featureflags_foreign_field_mul: (a: number, b: number) => void;
export const __wbg_get_featureflags_xor: (a: number) => number;
export const __wbg_set_featureflags_xor: (a: number, b: number) => void;
export const __wbg_get_featureflags_rot: (a: number) => number;
export const __wbg_set_featureflags_rot: (a: number, b: number) => void;
export const __wbg_get_featureflags_lookup_features: (a: number) => number;
export const __wbg_set_featureflags_lookup_features: (a: number, b: number) => void;
export const __wbg_wire_free: (a: number, b: number) => void;
export const lookuppatterns_new: (a: number, b: number, c: number, d: number) => number;
export const lookupfeatures_new: (a: number, b: number, c: number) => number;
export const lookupinfo_new: (a: number, b: number, c: number) => number;
export const __wbg_lookuppatterns_free: (a: number, b: number) => void;
export const __wbg_lookupfeatures_free: (a: number, b: number) => void;
export const __wbg_get_lookupfeatures_patterns: (a: number) => number;
export const __wbg_set_lookupfeatures_patterns: (a: number, b: number) => void;
export const __wbg_lookupinfo_free: (a: number, b: number) => void;
export const __wbg_get_lookupinfo_max_per_row: (a: number) => number;
export const __wbg_set_lookupinfo_max_per_row: (a: number, b: number) => void;
export const __wbg_get_lookupinfo_max_joint_size: (a: number) => number;
export const __wbg_set_lookupinfo_max_joint_size: (a: number, b: number) => void;
export const __wbg_get_lookupinfo_features: (a: number) => number;
export const __wbg_set_lookupinfo_features: (a: number, b: number) => void;
export const wire_create: (a: number, b: number) => number;
export const caml_pasta_fp_size_in_bits: () => number;
export const caml_pasta_fp_size: (a: number) => void;
export const caml_pasta_fp_add: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fp_sub: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fp_negate: (a: number, b: number, c: number) => void;
export const caml_pasta_fp_mul: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fp_div: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fp_inv: (a: number, b: number, c: number) => void;
export const caml_pasta_fp_square: (a: number, b: number, c: number) => void;
export const caml_pasta_fp_is_square: (a: number, b: number) => number;
export const caml_pasta_fp_sqrt: (a: number, b: number, c: number) => void;
export const caml_pasta_fp_of_int: (a: number, b: number) => void;
export const caml_pasta_fp_to_string: (a: number, b: number, c: number) => void;
export const caml_pasta_fp_of_string: (a: number, b: number, c: number) => void;
export const caml_pasta_fp_print: (a: number, b: number) => void;
export const caml_pasta_fp_compare: (a: number, b: number, c: number, d: number) => number;
export const caml_pasta_fp_equal: (a: number, b: number, c: number, d: number) => number;
export const caml_pasta_fp_random: (a: number) => void;
export const caml_pasta_fp_rng: (a: number, b: number) => void;
export const caml_pasta_fp_to_bigint: (a: number, b: number, c: number) => void;
export const caml_pasta_fp_of_bigint: (a: number, b: number, c: number) => void;
export const caml_pasta_fp_two_adic_root_of_unity: (a: number) => void;
export const caml_pasta_fp_domain_generator: (a: number, b: number) => void;
export const caml_pasta_fp_to_bytes: (a: number, b: number, c: number) => void;
export const caml_pasta_fp_of_bytes: (a: number, b: number, c: number) => void;
export const caml_pasta_fp_deep_copy: (a: number, b: number, c: number) => void;
export const __wbg_wasmfprandomoracles_free: (a: number, b: number) => void;
export const __wbg_get_wasmfprandomoracles_joint_combiner_chal: (a: number, b: number) => void;
export const __wbg_set_wasmfprandomoracles_joint_combiner_chal: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfprandomoracles_joint_combiner: (a: number, b: number) => void;
export const __wbg_set_wasmfprandomoracles_joint_combiner: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfprandomoracles_beta: (a: number, b: number) => void;
export const __wbg_set_wasmfprandomoracles_beta: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfprandomoracles_gamma: (a: number, b: number) => void;
export const __wbg_set_wasmfprandomoracles_gamma: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfprandomoracles_alpha_chal: (a: number, b: number) => void;
export const __wbg_set_wasmfprandomoracles_alpha_chal: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfprandomoracles_alpha: (a: number, b: number) => void;
export const __wbg_set_wasmfprandomoracles_alpha: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfprandomoracles_zeta: (a: number, b: number) => void;
export const __wbg_set_wasmfprandomoracles_zeta: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfprandomoracles_v: (a: number, b: number) => void;
export const __wbg_set_wasmfprandomoracles_v: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfprandomoracles_u: (a: number, b: number) => void;
export const __wbg_set_wasmfprandomoracles_u: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfprandomoracles_zeta_chal: (a: number, b: number) => void;
export const __wbg_set_wasmfprandomoracles_zeta_chal: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfprandomoracles_v_chal: (a: number, b: number) => void;
export const __wbg_set_wasmfprandomoracles_v_chal: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfprandomoracles_u_chal: (a: number, b: number) => void;
export const __wbg_set_wasmfprandomoracles_u_chal: (a: number, b: number, c: number) => void;
export const wasmfprandomoracles_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number, t: number, u: number, v: number, w: number, x: number) => number;
export const __wbg_wasmfporacles_free: (a: number, b: number) => void;
export const __wbg_get_wasmfporacles_o: (a: number) => number;
export const __wbg_set_wasmfporacles_o: (a: number, b: number) => void;
export const __wbg_get_wasmfporacles_p_eval0: (a: number, b: number) => void;
export const __wbg_set_wasmfporacles_p_eval0: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfporacles_p_eval1: (a: number, b: number) => void;
export const __wbg_set_wasmfporacles_p_eval1: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfporacles_digest_before_evaluations: (a: number, b: number) => void;
export const __wbg_set_wasmfporacles_digest_before_evaluations: (a: number, b: number, c: number) => void;
export const wasmfporacles_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => number;
export const wasmfporacles_opening_prechallenges: (a: number, b: number) => void;
export const wasmfporacles_set_opening_prechallenges: (a: number, b: number, c: number) => void;
export const fp_oracles_create: (a: number, b: number, c: number, d: number, e: number) => void;
export const fp_oracles_dummy: () => number;
export const fp_oracles_deep_copy: (a: number) => number;
export const caml_bigint_256_of_numeral: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_bigint_256_of_decimal_string: (a: number, b: number, c: number) => void;
export const caml_bigint_256_num_limbs: () => number;
export const caml_bigint_256_bytes_per_limb: () => number;
export const caml_bigint_256_div: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_bigint_256_compare: (a: number, b: number, c: number, d: number) => number;
export const caml_bigint_256_print: (a: number, b: number) => void;
export const caml_bigint_256_to_string: (a: number, b: number, c: number) => void;
export const caml_bigint_256_test_bit: (a: number, b: number, c: number) => number;
export const caml_bigint_256_to_bytes: (a: number, b: number, c: number) => void;
export const caml_bigint_256_of_bytes: (a: number, b: number, c: number) => void;
export const caml_bigint_256_deep_copy: (a: number, b: number, c: number) => void;
export const caml_vesta_one: () => number;
export const caml_vesta_add: (a: number, b: number) => number;
export const caml_vesta_sub: (a: number, b: number) => number;
export const caml_vesta_negate: (a: number) => number;
export const caml_vesta_double: (a: number) => number;
export const caml_vesta_scale: (a: number, b: number, c: number) => number;
export const caml_vesta_random: () => number;
export const caml_vesta_rng: (a: number) => number;
export const caml_vesta_endo_base: (a: number) => void;
export const caml_vesta_endo_scalar: (a: number) => void;
export const caml_vesta_to_affine: (a: number) => number;
export const caml_vesta_of_affine: (a: number) => number;
export const caml_vesta_of_affine_coordinates: (a: number, b: number, c: number, d: number) => number;
export const caml_vesta_affine_deep_copy: (a: number) => number;
export const __wbg_get_wasmfqdomain_group_gen: (a: number, b: number) => void;
export const __wbg_set_wasmfqdomain_group_gen: (a: number, b: number, c: number) => void;
export const wasmfqdomain_new: (a: number, b: number, c: number) => number;
export const __wbg_get_wasmfqshifts_s2: (a: number, b: number) => void;
export const __wbg_set_wasmfqshifts_s2: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqshifts_s3: (a: number, b: number) => void;
export const __wbg_set_wasmfqshifts_s3: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqshifts_s4: (a: number, b: number) => void;
export const __wbg_set_wasmfqshifts_s4: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqshifts_s5: (a: number, b: number) => void;
export const __wbg_set_wasmfqshifts_s5: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqshifts_s6: (a: number, b: number) => void;
export const __wbg_set_wasmfqshifts_s6: (a: number, b: number, c: number) => void;
export const wasmfqshifts_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number) => number;
export const caml_pasta_fq_plonk_verifier_index_read: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fq_plonk_verifier_index_write: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fq_plonk_verifier_index_serialize: (a: number, b: number) => void;
export const caml_pasta_fq_plonk_verifier_index_deserialize: (a: number, b: number, c: number, d: number) => void;
export const caml_pasta_fq_plonk_verifier_index_create: (a: number) => number;
export const caml_pasta_fq_plonk_verifier_index_shifts: (a: number) => number;
export const caml_pasta_fq_plonk_verifier_index_dummy: () => number;
export const __wbg_wasmgpallas_free: (a: number, b: number) => void;
export const __wbg_get_wasmgpallas_infinity: (a: number) => number;
export const __wbg_set_wasmgpallas_infinity: (a: number, b: number) => void;
export const wasmgpallas_new: (a: number, b: number, c: number, d: number, e: number) => number;
export const wasmgvesta_new: (a: number, b: number, c: number, d: number, e: number) => number;
export const caml_pallas_affine_one: () => number;
export const caml_vesta_affine_one: () => number;
export const caml_pallas_one: () => number;
export const caml_pallas_add: (a: number, b: number) => number;
export const caml_pallas_sub: (a: number, b: number) => number;
export const caml_pallas_negate: (a: number) => number;
export const caml_pallas_double: (a: number) => number;
export const caml_pallas_scale: (a: number, b: number, c: number) => number;
export const caml_pallas_random: () => number;
export const caml_pallas_rng: (a: number) => number;
export const caml_pallas_endo_base: (a: number) => void;
export const caml_pallas_endo_scalar: (a: number) => void;
export const caml_pallas_to_affine: (a: number) => number;
export const caml_pallas_of_affine: (a: number) => number;
export const caml_pallas_of_affine_coordinates: (a: number, b: number, c: number, d: number) => number;
export const caml_pallas_affine_deep_copy: (a: number) => number;
export const __wbg_get_wasmfqrandomoracles_joint_combiner_chal: (a: number, b: number) => void;
export const __wbg_set_wasmfqrandomoracles_joint_combiner_chal: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqrandomoracles_joint_combiner: (a: number, b: number) => void;
export const __wbg_set_wasmfqrandomoracles_joint_combiner: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqrandomoracles_beta: (a: number, b: number) => void;
export const __wbg_set_wasmfqrandomoracles_beta: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqrandomoracles_gamma: (a: number, b: number) => void;
export const __wbg_set_wasmfqrandomoracles_gamma: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqrandomoracles_alpha_chal: (a: number, b: number) => void;
export const __wbg_set_wasmfqrandomoracles_alpha_chal: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqrandomoracles_alpha: (a: number, b: number) => void;
export const __wbg_set_wasmfqrandomoracles_alpha: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqrandomoracles_zeta: (a: number, b: number) => void;
export const __wbg_set_wasmfqrandomoracles_zeta: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqrandomoracles_v: (a: number, b: number) => void;
export const __wbg_set_wasmfqrandomoracles_v: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqrandomoracles_u: (a: number, b: number) => void;
export const __wbg_set_wasmfqrandomoracles_u: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqrandomoracles_zeta_chal: (a: number, b: number) => void;
export const __wbg_set_wasmfqrandomoracles_zeta_chal: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqrandomoracles_v_chal: (a: number, b: number) => void;
export const __wbg_set_wasmfqrandomoracles_v_chal: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqrandomoracles_u_chal: (a: number, b: number) => void;
export const __wbg_set_wasmfqrandomoracles_u_chal: (a: number, b: number, c: number) => void;
export const wasmfqrandomoracles_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number, t: number, u: number, v: number, w: number, x: number) => number;
export const __wbg_get_wasmfqoracles_o: (a: number) => number;
export const __wbg_set_wasmfqoracles_o: (a: number, b: number) => void;
export const __wbg_get_wasmfqoracles_p_eval0: (a: number, b: number) => void;
export const __wbg_set_wasmfqoracles_p_eval0: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqoracles_p_eval1: (a: number, b: number) => void;
export const __wbg_set_wasmfqoracles_p_eval1: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfqoracles_digest_before_evaluations: (a: number, b: number) => void;
export const __wbg_set_wasmfqoracles_digest_before_evaluations: (a: number, b: number, c: number) => void;
export const wasmfqoracles_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => number;
export const wasmfqoracles_opening_prechallenges: (a: number, b: number) => void;
export const wasmfqoracles_set_opening_prechallenges: (a: number, b: number, c: number) => void;
export const fq_oracles_create: (a: number, b: number, c: number, d: number, e: number) => void;
export const __wbg_wasmpallasgprojective_free: (a: number, b: number) => void;
export const caml_pasta_fq_size: (a: number) => void;
export const caml_pasta_fq_add: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fq_sub: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fq_negate: (a: number, b: number, c: number) => void;
export const caml_pasta_fq_mul: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fq_div: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fq_inv: (a: number, b: number, c: number) => void;
export const caml_pasta_fq_square: (a: number, b: number, c: number) => void;
export const caml_pasta_fq_is_square: (a: number, b: number) => number;
export const caml_pasta_fq_sqrt: (a: number, b: number, c: number) => void;
export const caml_pasta_fq_of_int: (a: number, b: number) => void;
export const caml_pasta_fq_to_string: (a: number, b: number, c: number) => void;
export const caml_pasta_fq_of_string: (a: number, b: number, c: number) => void;
export const caml_pasta_fq_print: (a: number, b: number) => void;
export const caml_pasta_fq_compare: (a: number, b: number, c: number, d: number) => number;
export const caml_pasta_fq_equal: (a: number, b: number, c: number, d: number) => number;
export const caml_pasta_fq_random: (a: number) => void;
export const caml_pasta_fq_rng: (a: number, b: number) => void;
export const caml_pasta_fq_to_bigint: (a: number, b: number, c: number) => void;
export const caml_pasta_fq_of_bigint: (a: number, b: number, c: number) => void;
export const caml_pasta_fq_two_adic_root_of_unity: (a: number) => void;
export const caml_pasta_fq_domain_generator: (a: number, b: number) => void;
export const caml_pasta_fq_to_bytes: (a: number, b: number, c: number) => void;
export const caml_pasta_fq_of_bytes: (a: number, b: number, c: number) => void;
export const caml_pasta_fq_deep_copy: (a: number, b: number, c: number) => void;
export const __wbg_wasmgatewires_free: (a: number, b: number) => void;
export const __wbg_get_wasmgatewires_0: (a: number) => number;
export const __wbg_set_wasmgatewires_0: (a: number, b: number) => void;
export const __wbg_get_wasmgatewires_1: (a: number) => number;
export const __wbg_set_wasmgatewires_1: (a: number, b: number) => void;
export const __wbg_get_wasmgatewires_2: (a: number) => number;
export const __wbg_set_wasmgatewires_2: (a: number, b: number) => void;
export const __wbg_get_wasmgatewires_3: (a: number) => number;
export const __wbg_set_wasmgatewires_3: (a: number, b: number) => void;
export const __wbg_get_wasmgatewires_4: (a: number) => number;
export const __wbg_set_wasmgatewires_4: (a: number, b: number) => void;
export const __wbg_get_wasmgatewires_5: (a: number) => number;
export const __wbg_set_wasmgatewires_5: (a: number, b: number) => void;
export const __wbg_get_wasmgatewires_6: (a: number) => number;
export const __wbg_set_wasmgatewires_6: (a: number, b: number) => void;
export const wasmgatewires_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
export const __wbg_wasmfpdomain_free: (a: number, b: number) => void;
export const __wbg_get_wasmfpdomain_log_size_of_group: (a: number) => number;
export const __wbg_set_wasmfpdomain_log_size_of_group: (a: number, b: number) => void;
export const __wbg_get_wasmfpdomain_group_gen: (a: number, b: number) => void;
export const __wbg_set_wasmfpdomain_group_gen: (a: number, b: number, c: number) => void;
export const wasmfpdomain_new: (a: number, b: number, c: number) => number;
export const __wbg_wasmfpplonkverificationevals_free: (a: number, b: number) => void;
export const wasmfpplonkverificationevals_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number) => number;
export const wasmfpplonkverificationevals_sigma_comm: (a: number, b: number) => void;
export const wasmfpplonkverificationevals_set_sigma_comm: (a: number, b: number, c: number) => void;
export const wasmfpplonkverificationevals_coefficients_comm: (a: number, b: number) => void;
export const wasmfpplonkverificationevals_set_coefficients_comm: (a: number, b: number, c: number) => void;
export const wasmfpplonkverificationevals_generic_comm: (a: number) => number;
export const wasmfpplonkverificationevals_set_generic_comm: (a: number, b: number) => void;
export const wasmfpplonkverificationevals_psm_comm: (a: number) => number;
export const wasmfpplonkverificationevals_set_psm_comm: (a: number, b: number) => void;
export const wasmfpplonkverificationevals_complete_add_comm: (a: number) => number;
export const wasmfpplonkverificationevals_set_complete_add_comm: (a: number, b: number) => void;
export const wasmfpplonkverificationevals_mul_comm: (a: number) => number;
export const wasmfpplonkverificationevals_set_mul_comm: (a: number, b: number) => void;
export const wasmfpplonkverificationevals_emul_comm: (a: number) => number;
export const wasmfpplonkverificationevals_set_emul_comm: (a: number, b: number) => void;
export const wasmfpplonkverificationevals_endomul_scalar_comm: (a: number) => number;
export const wasmfpplonkverificationevals_set_endomul_scalar_comm: (a: number, b: number) => void;
export const wasmfpplonkverificationevals_xor_comm: (a: number) => number;
export const wasmfpplonkverificationevals_set_xor_comm: (a: number, b: number) => void;
export const wasmfpplonkverificationevals_rot_comm: (a: number) => number;
export const wasmfpplonkverificationevals_set_rot_comm: (a: number, b: number) => void;
export const wasmfpplonkverificationevals_range_check0_comm: (a: number) => number;
export const wasmfpplonkverificationevals_set_range_check0_comm: (a: number, b: number) => void;
export const wasmfpplonkverificationevals_range_check1_comm: (a: number) => number;
export const wasmfpplonkverificationevals_set_range_check1_comm: (a: number, b: number) => void;
export const wasmfpplonkverificationevals_foreign_field_add_comm: (a: number) => number;
export const wasmfpplonkverificationevals_set_foreign_field_add_comm: (a: number, b: number) => void;
export const wasmfpplonkverificationevals_foreign_field_mul_comm: (a: number) => number;
export const wasmfpplonkverificationevals_set_foreign_field_mul_comm: (a: number, b: number) => void;
export const __wbg_wasmfpshifts_free: (a: number, b: number) => void;
export const __wbg_get_wasmfpshifts_s2: (a: number, b: number) => void;
export const __wbg_set_wasmfpshifts_s2: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfpshifts_s3: (a: number, b: number) => void;
export const __wbg_set_wasmfpshifts_s3: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfpshifts_s4: (a: number, b: number) => void;
export const __wbg_set_wasmfpshifts_s4: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfpshifts_s5: (a: number, b: number) => void;
export const __wbg_set_wasmfpshifts_s5: (a: number, b: number, c: number) => void;
export const __wbg_get_wasmfpshifts_s6: (a: number, b: number) => void;
export const __wbg_set_wasmfpshifts_s6: (a: number, b: number, c: number) => void;
export const wasmfpshifts_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number) => number;
export const __wbg_wasmfplookupselectors_free: (a: number, b: number) => void;
export const wasmfplookupselectors_new: (a: number, b: number, c: number, d: number) => number;
export const wasmfplookupselectors_xor: (a: number) => number;
export const wasmfplookupselectors_set_xor: (a: number, b: number) => void;
export const wasmfplookupselectors_lookup: (a: number) => number;
export const wasmfplookupselectors_set_lookup: (a: number, b: number) => void;
export const wasmfplookupselectors_ffmul: (a: number) => number;
export const wasmfplookupselectors_set_ffmul: (a: number, b: number) => void;
export const wasmfplookupselectors_range_check: (a: number) => number;
export const wasmfplookupselectors_set_range_check: (a: number, b: number) => void;
export const __wbg_wasmfplookupverifierindex_free: (a: number, b: number) => void;
export const __wbg_get_wasmfplookupverifierindex_joint_lookup_used: (a: number) => number;
export const __wbg_set_wasmfplookupverifierindex_joint_lookup_used: (a: number, b: number) => void;
export const wasmfplookupverifierindex_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
export const wasmfplookupverifierindex_lookup_table: (a: number, b: number) => void;
export const wasmfplookupverifierindex_set_lookup_table: (a: number, b: number, c: number) => void;
export const wasmfplookupverifierindex_lookup_selectors: (a: number) => number;
export const wasmfplookupverifierindex_set_lookup_selectors: (a: number, b: number) => void;
export const wasmfplookupverifierindex_table_ids: (a: number) => number;
export const wasmfplookupverifierindex_set_table_ids: (a: number, b: number) => void;
export const wasmfplookupverifierindex_lookup_info: (a: number) => number;
export const wasmfplookupverifierindex_set_lookup_info: (a: number, b: number) => void;
export const wasmfplookupverifierindex_runtime_tables_selector: (a: number) => number;
export const wasmfplookupverifierindex_set_runtime_tables_selector: (a: number, b: number) => void;
export const __wbg_wasmfpplonkverifierindex_free: (a: number, b: number) => void;
export const __wbg_get_wasmfpplonkverifierindex_domain: (a: number) => number;
export const __wbg_set_wasmfpplonkverifierindex_domain: (a: number, b: number) => void;
export const __wbg_get_wasmfpplonkverifierindex_max_poly_size: (a: number) => number;
export const __wbg_set_wasmfpplonkverifierindex_max_poly_size: (a: number, b: number) => void;
export const __wbg_get_wasmfpplonkverifierindex_public_: (a: number) => number;
export const __wbg_set_wasmfpplonkverifierindex_public_: (a: number, b: number) => void;
export const __wbg_get_wasmfpplonkverifierindex_prev_challenges: (a: number) => number;
export const __wbg_set_wasmfpplonkverifierindex_prev_challenges: (a: number, b: number) => void;
export const __wbg_get_wasmfpplonkverifierindex_shifts: (a: number) => number;
export const __wbg_set_wasmfpplonkverifierindex_shifts: (a: number, b: number) => void;
export const __wbg_get_wasmfpplonkverifierindex_zk_rows: (a: number) => number;
export const __wbg_set_wasmfpplonkverifierindex_zk_rows: (a: number, b: number) => void;
export const wasmfpplonkverifierindex_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => number;
export const wasmfpplonkverifierindex_srs: (a: number) => number;
export const wasmfpplonkverifierindex_set_srs: (a: number, b: number) => void;
export const wasmfpplonkverifierindex_evals: (a: number) => number;
export const wasmfpplonkverifierindex_set_evals: (a: number, b: number) => void;
export const wasmfpplonkverifierindex_lookup_index: (a: number) => number;
export const wasmfpplonkverifierindex_set_lookup_index: (a: number, b: number) => void;
export const caml_pasta_fp_plonk_verifier_index_read: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fp_plonk_verifier_index_write: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fp_plonk_verifier_index_serialize: (a: number, b: number) => void;
export const caml_pasta_fp_plonk_verifier_index_deserialize: (a: number, b: number, c: number, d: number) => void;
export const caml_pasta_fp_plonk_verifier_index_create: (a: number) => number;
export const caml_pasta_fp_plonk_verifier_index_shifts: (a: number) => number;
export const caml_pasta_fp_plonk_verifier_index_dummy: () => number;
export const caml_pasta_fp_plonk_verifier_index_deep_copy: (a: number) => number;
export const prover_to_json: (a: number, b: number) => void;
export const __wbg_poolbuilder_free: (a: number, b: number) => void;
export const poolbuilder_numThreads: (a: number) => number;
export const poolbuilder_receiver: (a: number) => number;
export const poolbuilder_build: (a: number) => void;
export const initThreadPool: (a: number) => number;
export const exitThreadPool: () => number;
export const wbg_rayon_start_worker: (a: number) => void;
export const __wbg_wasmfpsrs_free: (a: number, b: number) => void;
export const caml_fp_srs_create: (a: number) => number;
export const caml_fp_srs_add_lagrange_basis: (a: number, b: number) => void;
export const caml_fp_srs_write: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_fp_srs_read: (a: number, b: number, c: number, d: number) => void;
export const caml_fp_srs_lagrange_commitments_whole_domain_ptr: (a: number, b: number) => number;
export const caml_fp_srs_lagrange_commitments_whole_domain_read_from_ptr: (a: number, b: number) => void;
export const caml_fp_srs_lagrange_commitment: (a: number, b: number, c: number, d: number) => void;
export const caml_fp_srs_commit_evaluations: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_fp_srs_b_poly_commitment: (a: number, b: number, c: number, d: number) => void;
export const caml_fp_srs_batch_accumulator_check: (a: number, b: number, c: number, d: number, e: number) => number;
export const caml_fp_srs_batch_accumulator_generate: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_fp_srs_h: (a: number) => number;
export const caml_fp_srs_create_parallel: (a: number) => number;
export const caml_fp_srs_get: (a: number, b: number) => void;
export const caml_fp_srs_set: (a: number, b: number) => number;
export const caml_fp_srs_maybe_lagrange_commitment: (a: number, b: number, c: number) => number;
export const caml_fp_srs_set_lagrange_basis: (a: number, b: number, c: number, d: number) => void;
export const caml_fp_srs_get_lagrange_basis: (a: number, b: number, c: number) => void;
export const __wbg_wasmpastafpplonkindex_free: (a: number, b: number) => void;
export const __wbg_wasmpastafplookuptable_free: (a: number, b: number) => void;
export const wasmpastafplookuptable_new: (a: number, b: number) => number;
export const caml_pasta_fp_plonk_index_create: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const caml_pasta_fp_plonk_index_max_degree: (a: number) => number;
export const caml_pasta_fp_plonk_index_public_inputs: (a: number) => number;
export const caml_pasta_fp_plonk_index_domain_d1_size: (a: number) => number;
export const caml_pasta_fp_plonk_index_domain_d4_size: (a: number) => number;
export const caml_pasta_fp_plonk_index_domain_d8_size: (a: number) => number;
export const caml_pasta_fp_plonk_index_decode: (a: number, b: number, c: number, d: number) => void;
export const caml_pasta_fp_plonk_index_encode: (a: number, b: number) => void;
export const caml_pasta_fp_plonk_index_read: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fp_plonk_index_write: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fp_plonk_index_serialize: (a: number, b: number) => void;
export const caml_pasta_fq_plonk_index_create: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const caml_pasta_fq_plonk_index_decode: (a: number, b: number, c: number, d: number) => void;
export const caml_pasta_fq_plonk_index_encode: (a: number, b: number) => void;
export const caml_pasta_fq_plonk_index_read: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fq_plonk_index_write: (a: number, b: number, c: number, d: number, e: number) => void;
export const caml_pasta_fq_plonk_index_serialize: (a: number, b: number) => void;
export const wasmfppolycomm_new: (a: number, b: number, c: number) => number;
export const wasmfppolycomm_unshifted: (a: number, b: number) => void;
export const wasmfppolycomm_set_unshifted: (a: number, b: number, c: number) => void;
export const __wbg_wasmfppolycomm_free: (a: number, b: number) => void;
export const __wbg_get_wasmfppolycomm_shifted: (a: number) => number;
export const __wbg_set_wasmfppolycomm_shifted: (a: number, b: number) => void;
export const wasmfqpolycomm_new: (a: number, b: number, c: number) => number;
export const __wbg_wasmpastafpruntimetablecfg_free: (a: number, b: number) => void;
export const __wbg_wasmpastafqruntimetablecfg_free: (a: number, b: number) => void;
export const __wbg_get_wasmfqgate_typ: (a: number) => number;
export const __wbg_get_wire_row: (a: number) => number;
export const __wbg_get_wire_col: (a: number) => number;
export const __wbg_get_wasmfqdomain_log_size_of_group: (a: number) => number;
export const __wbg_get_wasmfqplonkverifierindex_max_poly_size: (a: number) => number;
export const __wbg_get_wasmfqplonkverifierindex_public_: (a: number) => number;
export const __wbg_get_wasmfqplonkverifierindex_prev_challenges: (a: number) => number;
export const __wbg_get_wasmfqplonkverifierindex_zk_rows: (a: number) => number;
export const wasmvecvecfq_create: (a: number) => number;
export const wasmvecvecfppolycomm_create: (a: number) => number;
export const wasmvecvecfqpolycomm_create: (a: number) => number;
export const __wbg_set_lookuppatterns_xor: (a: number, b: number) => void;
export const __wbg_set_lookuppatterns_lookup: (a: number, b: number) => void;
export const __wbg_set_lookuppatterns_range_check: (a: number, b: number) => void;
export const __wbg_set_lookuppatterns_foreign_field_mul: (a: number, b: number) => void;
export const __wbg_set_lookupfeatures_joint_lookup_used: (a: number, b: number) => void;
export const __wbg_set_lookupfeatures_uses_runtime_tables: (a: number, b: number) => void;
export const __wbg_set_wasmgvesta_infinity: (a: number, b: number) => void;
export const __wbg_set_wasmfqlookupverifierindex_joint_lookup_used: (a: number, b: number) => void;
export const __wbg_get_wasmfqplonkverifierindex_domain: (a: number) => number;
export const __wbg_get_wasmfqplonkverifierindex_shifts: (a: number) => number;
export const __wbg_set_wasmfqopeningproof_z1: (a: number, b: number, c: number) => void;
export const __wbg_set_wasmfqshifts_s0: (a: number, b: number, c: number) => void;
export const __wbg_set_wasmfqshifts_s1: (a: number, b: number, c: number) => void;
export const __wbg_set_wasmgpallas_x: (a: number, b: number, c: number) => void;
export const __wbg_set_wasmgpallas_y: (a: number, b: number, c: number) => void;
export const __wbg_set_wasmgvesta_x: (a: number, b: number, c: number) => void;
export const __wbg_set_wasmgvesta_y: (a: number, b: number, c: number) => void;
export const __wbg_set_wasmfpopeningproof_z1: (a: number, b: number, c: number) => void;
export const __wbg_set_wasmfpshifts_s0: (a: number, b: number, c: number) => void;
export const __wbg_set_wasmfpshifts_s1: (a: number, b: number, c: number) => void;
export const caml_fq_srs_read: (a: number, b: number, c: number, d: number) => void;
export const wasmfqlookupselectors_new: (a: number, b: number, c: number, d: number) => number;
export const __wbg_get_wasmfqopeningproof_z1: (a: number, b: number) => void;
export const __wbg_get_wasmfqshifts_s0: (a: number, b: number) => void;
export const __wbg_get_wasmfqshifts_s1: (a: number, b: number) => void;
export const __wbg_get_wasmgpallas_x: (a: number, b: number) => void;
export const __wbg_get_wasmgpallas_y: (a: number, b: number) => void;
export const __wbg_get_wasmgvesta_x: (a: number, b: number) => void;
export const __wbg_get_wasmgvesta_y: (a: number, b: number) => void;
export const __wbg_get_wasmfpopeningproof_z1: (a: number, b: number) => void;
export const __wbg_get_wasmfpshifts_s0: (a: number, b: number) => void;
export const __wbg_get_wasmfpshifts_s1: (a: number, b: number) => void;
export const wasmpastafqlookuptable_new: (a: number, b: number) => number;
export const caml_pasta_fq_size_in_bits: () => number;
export const __wbg_wasmfqgate_free: (a: number, b: number) => void;
export const __wbg_set_wire_row: (a: number, b: number) => void;
export const __wbg_set_wire_col: (a: number, b: number) => void;
export const __wbg_set_wasmfqdomain_log_size_of_group: (a: number, b: number) => void;
export const __wbg_set_wasmfqplonkverifierindex_max_poly_size: (a: number, b: number) => void;
export const __wbg_set_wasmfqplonkverifierindex_public_: (a: number, b: number) => void;
export const __wbg_set_wasmfqplonkverifierindex_prev_challenges: (a: number, b: number) => void;
export const __wbg_set_wasmfqplonkverifierindex_zk_rows: (a: number, b: number) => void;
export const wasmfqlookupcommitments_set_runtime: (a: number, b: number) => void;
export const wasmpastafpruntimetablecfg_new: (a: number, b: number, c: number) => number;
export const wasmpastafqruntimetablecfg_new: (a: number, b: number, c: number) => number;
export const __wbg_set_wasmfqplonkverifierindex_domain: (a: number, b: number) => void;
export const __wbg_set_wasmfqplonkverifierindex_shifts: (a: number, b: number) => void;
export const fq_oracles_dummy: () => number;
export const __wbg_wasmfqpolycomm_free: (a: number, b: number) => void;
export const __wbg_set_wasmfqgate_typ: (a: number, b: number) => void;
export const caml_pasta_fq_plonk_proof_deep_copy: (a: number) => number;
export const caml_pasta_fq_plonk_gate_vector_create: () => number;
export const wasmfqlookupcommitments_runtime: (a: number) => number;
export const __wbg_get_wasmfqpolycomm_shifted: (a: number) => number;
export const __wbg_get_wasmfqgate_wires: (a: number) => number;
export const wasmfqopeningproof_delta: (a: number) => number;
export const wasmfqopeningproof_sg: (a: number) => number;
export const __wbg_get_lookuppatterns_xor: (a: number) => number;
export const __wbg_get_lookuppatterns_lookup: (a: number) => number;
export const __wbg_get_lookuppatterns_range_check: (a: number) => number;
export const __wbg_get_lookuppatterns_foreign_field_mul: (a: number) => number;
export const __wbg_get_lookupfeatures_joint_lookup_used: (a: number) => number;
export const __wbg_get_lookupfeatures_uses_runtime_tables: (a: number) => number;
export const __wbg_get_wasmgvesta_infinity: (a: number) => number;
export const __wbg_get_wasmfqlookupverifierindex_joint_lookup_used: (a: number) => number;
export const fq_oracles_deep_copy: (a: number) => number;
export const __wbg_set_wasmfqgate_wires: (a: number, b: number) => void;
export const caml_fq_srs_lagrange_commitments_whole_domain_read_from_ptr: (a: number, b: number) => void;
export const wasmfqprovercommitments_lookup: (a: number) => number;
export const __wbg_set_wasmfqpolycomm_shifted: (a: number, b: number) => void;
export const __wbg_wasmpastafqlookuptable_free: (a: number, b: number) => void;
export const __wbg_wasmgvesta_free: (a: number, b: number) => void;
export const __wbg_wasmfqrandomoracles_free: (a: number, b: number) => void;
export const __wbg_wasmvestagprojective_free: (a: number, b: number) => void;
export const __wbg_wasmfqdomain_free: (a: number, b: number) => void;
export const __wbg_wasmfqshifts_free: (a: number, b: number) => void;
export const caml_pasta_fq_plonk_gate_vector_len: (a: number) => number;
export const __wbg_wasmfqlookupcommitments_free: (a: number, b: number) => void;
export const wasmfqopeningproof_lr_0: (a: number, b: number) => void;
export const wasmfqopeningproof_lr_1: (a: number, b: number) => void;
export const wasmfqpolycomm_unshifted: (a: number, b: number) => void;
export const __wbg_wasmfqruntimetable_free: (a: number, b: number) => void;
export const __wbg_wasmfqoracles_free: (a: number, b: number) => void;
export const wasmfqlookupcommitments_set_aggreg: (a: number, b: number) => void;
export const wasmfqprovercommitments_set_lookup: (a: number, b: number) => void;
export const wasmfqprovercommitments_set_t_comm: (a: number, b: number) => void;
export const wasmfqprovercommitments_set_z_comm: (a: number, b: number) => void;
export const wasmfqprovercommitments_set_w_comm: (a: number, b: number, c: number) => void;
export const wasmfqprovercommitments_t_comm: (a: number) => number;
export const wasmfqprovercommitments_z_comm: (a: number) => number;
export const __wbg_wasmfqprovercommitments_free: (a: number, b: number) => void;
export const wasmfqlookupcommitments_aggreg: (a: number) => number;
export const caml_pasta_fq_plonk_gate_vector_add: (a: number, b: number) => void;
export const __wbg_wasmfqgatevector_free: (a: number, b: number) => void;
export const __wbg_wasmfqplonkverificationevals_free: (a: number, b: number) => void;
export const wasmfqprovercommitments_w_comm: (a: number, b: number) => void;
export const wasmfqlookupcommitments_sorted: (a: number, b: number) => void;
export const wasmfqplonkverificationevals_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number) => number;
export const wasmfqplonkverificationevals_sigma_comm: (a: number, b: number) => void;
export const wasmfqplonkverificationevals_coefficients_comm: (a: number, b: number) => void;
export const wasmfqopeningproof_set_sg: (a: number, b: number) => void;
export const wasmfqopeningproof_set_delta: (a: number, b: number) => void;
export const __wbg_wasmfqopeningproof_free: (a: number, b: number) => void;
export const wasmfqlookupverifierindex_set_lookup_selectors: (a: number, b: number) => void;
export const __wbg_wasmfqlookupverifierindex_free: (a: number, b: number) => void;
export const __wbg_wasmfqlookupselectors_free: (a: number, b: number) => void;
export const __wbg_wasmvecvecfq_free: (a: number, b: number) => void;
export const __wbg_wasmvecvecfqpolycomm_free: (a: number, b: number) => void;
export const wasmfqpolycomm_set_unshifted: (a: number, b: number, c: number) => void;
export const wasmfqopeningproof_set_lr_0: (a: number, b: number, c: number) => void;
export const wasmfqopeningproof_set_lr_1: (a: number, b: number, c: number) => void;
export const wasmfqlookupverifierindex_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
export const wasmfqplonkverificationevals_set_coefficients_comm: (a: number, b: number, c: number) => void;
export const wasmfqplonkverificationevals_set_sigma_comm: (a: number, b: number, c: number) => void;
export const wasmfqlookupcommitments_new: (a: number, b: number, c: number, d: number) => number;
export const wasmfqlookupcommitments_set_sorted: (a: number, b: number, c: number) => void;
export const wasmfqprovercommitments_new: (a: number, b: number, c: number, d: number, e: number) => number;
export const wasmfqplonkverificationevals_foreign_field_mul_comm: (a: number) => number;
export const wasmfqplonkverificationevals_foreign_field_add_comm: (a: number) => number;
export const wasmfqplonkverificationevals_range_check1_comm: (a: number) => number;
export const wasmfqplonkverificationevals_range_check0_comm: (a: number) => number;
export const wasmfqplonkverificationevals_rot_comm: (a: number) => number;
export const wasmfqplonkverificationevals_xor_comm: (a: number) => number;
export const wasmfqplonkverificationevals_generic_comm: (a: number) => number;
export const wasmfqplonkverificationevals_set_generic_comm: (a: number, b: number) => void;
export const wasmfqplonkverificationevals_psm_comm: (a: number) => number;
export const wasmfqplonkverificationevals_set_psm_comm: (a: number, b: number) => void;
export const wasmfqplonkverificationevals_complete_add_comm: (a: number) => number;
export const wasmfqplonkverificationevals_set_complete_add_comm: (a: number, b: number) => void;
export const wasmfqplonkverificationevals_mul_comm: (a: number) => number;
export const wasmfqplonkverificationevals_set_mul_comm: (a: number, b: number) => void;
export const wasmfqplonkverificationevals_emul_comm: (a: number) => number;
export const wasmfqplonkverificationevals_set_emul_comm: (a: number, b: number) => void;
export const wasmfqplonkverificationevals_endomul_scalar_comm: (a: number) => number;
export const wasmfqplonkverificationevals_set_endomul_scalar_comm: (a: number, b: number) => void;
export const wasmfqplonkverificationevals_set_xor_comm: (a: number, b: number) => void;
export const wasmfqplonkverificationevals_set_rot_comm: (a: number, b: number) => void;
export const wasmfqplonkverificationevals_set_range_check0_comm: (a: number, b: number) => void;
export const wasmfqplonkverificationevals_set_range_check1_comm: (a: number, b: number) => void;
export const wasmfqplonkverificationevals_set_foreign_field_add_comm: (a: number, b: number) => void;
export const wasmfqplonkverificationevals_set_foreign_field_mul_comm: (a: number, b: number) => void;
export const caml_pasta_fq_plonk_verifier_index_deep_copy: (a: number) => number;
export const wasmfqplonkverifierindex_evals: (a: number) => number;
export const wasmfqplonkverifierindex_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => number;
export const wasmfqlookupverifierindex_runtime_tables_selector: (a: number) => number;
export const wasmfqlookupverifierindex_table_ids: (a: number) => number;
export const wasmfqlookupverifierindex_lookup_table: (a: number, b: number) => void;
export const wasmfqlookupverifierindex_set_lookup_table: (a: number, b: number, c: number) => void;
export const wasmfqlookupverifierindex_lookup_selectors: (a: number) => number;
export const wasmfqlookupverifierindex_set_table_ids: (a: number, b: number) => void;
export const wasmfqlookupverifierindex_lookup_info: (a: number) => number;
export const wasmfqlookupverifierindex_set_lookup_info: (a: number, b: number) => void;
export const wasmfqlookupverifierindex_set_runtime_tables_selector: (a: number, b: number) => void;
export const wasmfqlookupselectors_range_check: (a: number) => number;
export const wasmfqlookupselectors_ffmul: (a: number) => number;
export const wasmfqlookupselectors_lookup: (a: number) => number;
export const wasmfqlookupselectors_xor: (a: number) => number;
export const wasmfqlookupselectors_set_xor: (a: number, b: number) => void;
export const wasmfqlookupselectors_set_lookup: (a: number, b: number) => void;
export const wasmfqlookupselectors_set_ffmul: (a: number, b: number) => void;
export const wasmfqlookupselectors_set_range_check: (a: number, b: number) => void;
export const caml_fq_srs_get: (a: number, b: number) => void;
export const caml_fq_srs_h: (a: number) => number;
export const caml_fq_srs_write: (a: number, b: number, c: number, d: number, e: number) => void;
export const __wbg_wasmfqsrs_free: (a: number, b: number) => void;
export const wasmfqplonkverifierindex_lookup_index: (a: number) => number;
export const __wbg_wasmfqplonkverifierindex_free: (a: number, b: number) => void;
export const wasmfqplonkverifierindex_srs: (a: number) => number;
export const wasmfqplonkverifierindex_set_srs: (a: number, b: number) => void;
export const wasmfqplonkverifierindex_set_evals: (a: number, b: number) => void;
export const wasmfqplonkverifierindex_set_lookup_index: (a: number, b: number) => void;
export const wasmfqproverproof_set_prev_challenges_comms: (a: number, b: number, c: number) => void;
export const wasmfqproverproof_set_prev_challenges_scalars: (a: number, b: number) => void;
export const wasmfqproverproof_set_proof: (a: number, b: number) => void;
export const wasmfqproverproof_set_commitments: (a: number, b: number) => void;
export const wasmfqproverproof_prev_challenges_comms: (a: number, b: number) => void;
export const wasmfqproverproof_prev_challenges_scalars: (a: number) => number;
export const wasmfqproverproof_proof: (a: number) => number;
export const wasmfqproverproof_commitments: (a: number) => number;
export const __wbg_wasmfqproverproof_free: (a: number, b: number) => void;
export const __wbg_wasmpastafqplonkindex_free: (a: number, b: number) => void;
export const caml_pasta_fq_plonk_index_max_degree: (a: number) => number;
export const caml_pasta_fq_plonk_index_public_inputs: (a: number) => number;
export const caml_pasta_fq_plonk_index_domain_d1_size: (a: number) => number;
export const caml_pasta_fq_plonk_index_domain_d4_size: (a: number) => number;
export const caml_pasta_fq_plonk_index_domain_d8_size: (a: number) => number;
export const memory: WebAssembly.Memory;
export const __wbindgen_exn_store: (a: number) => void;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_add_to_stack_pointer: (a: number) => number;
export const __wbindgen_thread_destroy: (a?: number, b?: number, c?: number) => void;
export const __wbindgen_start: (a: number) => void;
